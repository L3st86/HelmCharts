apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "Duplicati.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "Duplicati.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "Duplicati.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "Duplicati.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "Duplicati.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8200
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.config.enabled }}
            - name: config
              mountPath: /app/config
            {{- end }}
            {{- if .Values.persistence.source.enabled }}
            - name: source
              mountPath: /app/source
            {{- end }}
            {{- if .Values.persistence.backups.enabled }}
            - name: backups
              mountPath: /app/backups
            {{- end }}
            {{- if .Values.persistence.nfs.enabled }}
            - name: nfs
              mountPath: /app/nfs
            {{- end }}
      volumes:
        {{- if .Values.persistence.config.enabled }}
        - name: config
          persistentVolumeClaim:
            claimName: pvc-config
        {{- end }}
        {{- if .Values.persistence.source.enabled }}
        - name: source
          persistentVolumeClaim:
            claimName: pvc-source
        {{- end }}
        {{- if .Values.persistence.backups.enabled }}
        - name: backups
          persistentVolumeClaim:
            claimName: pvc-backups
        {{- end }}
        {{- if .Values.persistence.nfs.enabled }}
        - name: nfs
          nfs:
            server: {{ .Values.persistence.nfs.server }}
            path: {{ .Values.persistence.nfs.path }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
