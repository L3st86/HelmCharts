# Default values for jellyfin.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jellyfin/jellyfin
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: "jellyfin"
fullnameOverride: "jellyfin"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

service:
  type: ClusterIP
  port: 8096

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Enables Hardware GPU aceleration
# Query the id of the render group on the host system with 'getent group render | cut -d: -f3'
hwAcceleration:
  enabled: false
  runAsUser: ""
  runAsGroup: ""
  rendergroup: ""
  
persistence:
  config:
    enabled: false
    accessMode: ""
    size: ""
    storageClassName: ""
  # Extra volume to add nfs shared folder  
  # will be mounted at /nfs 
  nfs:
    enabled: false  
    accessMode: ""
    size: ""
    storageClassName: ""
    server: ""
    path: ""  
    
nodeSelector: {}

tolerations: []

affinity: {}
