apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mosquito-mqtt.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "mosquito-mqtt.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mosquito-mqtt.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mosquito-mqtt.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mosquito-mqtt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      # === INIT CONTAINER: prepara /mosquitto/config RW con permisos correctos ===
      initContainers:
        - name: prepare-config
          image: alpine:3.19
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          command: ["/bin/sh","-c"]
          args:
            - |
              set -e
              cp /config-ro/mosquitto.conf /config-rw/mosquitto.conf
              {{- if and .Values.authentication.enabled .Values.authentication.existingSecret }}
              if [ -f /secret-ro/mosquitto.passwd ]; then
                cp /secret-ro/mosquitto.passwd /config-rw/mosquitto.passwd
                chmod 0600 /config-rw/mosquitto.passwd
              fi
              {{- end }}
              chown -R 1883:1883 /config-rw
          volumeMounts:
            - name: mosquitto-config
              mountPath: /config-rw
            - name: config-readonly
              mountPath: /config-ro
            {{- if and .Values.authentication.enabled .Values.authentication.existingSecret }}
            - name: passwordfile
              mountPath: /secret-ro
            {{- end }}

      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.ports }}
          ports:
          {{- range $key, $value := . }}
            - name: {{ $key }}
              containerPort: {{ $value.port }}
              protocol: {{ default "TCP" $value.protocol }}
          {{- end }}
          {{- end }}
          # Probes contra MQTT (1883). Cambia a websocket si lo prefieres.
          livenessProbe:
            tcpSocket:
              port: mqtt
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: mqtt
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            # RW listo con permisos (aquí dejó todo el initContainer)
            - name: mosquitto-config
              mountPath: /mosquitto/config
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
              subPath: {{ .Values.persistence.subPath }}
            {{- end }}
          {{- with .Values.extraVolumeMounts }}
            {{ toYaml . | indent 12 | trim }}
          {{- end }}

      volumes:
        # Destino RW para /mosquitto/config
        - name: mosquitto-config
          emptyDir: {}

        # ConfigMap con mosquitto.conf (solo lectura)
        - name: config-readonly
          configMap:
            name: {{ if .Values.existingConfigMap }}{{ .Values.existingConfigMap }}{{ else }}{{ include "mosquito-mqtt.fullname" . }}{{ end }}

        # Secret con mosquitto.passwd (solo lectura, opcional)
        {{- if and .Values.authentication.enabled .Values.authentication.existingSecret }}
        - name: passwordfile
          secret:
            secretName: {{ .Values.authentication.existingSecret }}
            items:
              - key: {{ .Values.authentication.passwordKey }}
                path: mosquitto.passwd
            defaultMode: 384  # 0600 (da igual porque luego copiamos)
        {{- end }}

        {{- if .Values.persistence.enabled }}
        - name: data
          {{- if .Values.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "mosquito-mqtt.fullname" . }}
          {{- end }}
        {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
